generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  files File[]
  folders Folder[]
}

model session {
  sid    String   @id @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model Folder {
  id Int @id @default(autoincrement())
  name String
  parentFolderId Int? 
  parentFolder Folder? @relation("FolderHierarchy", fields: [parentFolderId], references: [id], onDelete: Cascade)
  subfolders Folder[] @relation("FolderHierarchy")
  files File[] @relation("FilesInFolder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner_id Int
  user User @relation(fields: [owner_id], references: [id], onDelete: Cascade)
}

model File {
  id Int @id @default(autoincrement())
  name String
  ext String // The file extension like: '.png'
  path String // The URL or the path to the local directory
  size Int // In bytes
  parentFolderId Int 
  parentFolder Folder @relation("FilesInFolder",fields: [parentFolderId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  owner_id Int
  user User @relation(fields: [owner_id], references: [id], onDelete: Cascade)
}